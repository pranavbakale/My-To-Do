{"version":3,"sources":["components/Form.js","components/Todo.js","components/TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["Form","setInputText","todos","setTodos","inputText","setStatus","value","onChange","e","target","type","className","onClick","preventDefault","text","completed","id","Math","random","name","Todo","todo","map","item","filter","el","TodoList","filteredTodos","App","useState","status","setFilteredTodos","useEffect","getLocalTodos","filterHandler","saveLocalTodos","localStorage","setItem","JSON","stringify","getItem","todoLocal","parse","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+NAkCeA,EAhCF,SAAC,GAA6D,IAA3DC,EAA0D,EAA1DA,aAAcC,EAA4C,EAA5CA,MAAOC,EAAqC,EAArCA,SAAUC,EAA2B,EAA3BA,UAAWC,EAAgB,EAAhBA,UAexD,OACI,iCACE,uBAAOC,MAAOF,EAAWG,SAhBN,SAACC,GACxBP,EAAaO,EAAEC,OAAOH,QAemCI,KAAK,OAAOC,UAAU,eAC3E,wBAAQC,QAdY,SAACJ,GACzBA,EAAEK,iBACFV,EAAS,GAAD,mBACHD,GADG,CAEN,CAACY,KAAKV,EAAYW,WAAW,EAAQC,GAAkB,IAAdC,KAAKC,aAEhDjB,EAAa,KAQ2BU,UAAU,cAAcD,KAAK,SAAjE,SACE,mBAAGC,UAAU,yBAEf,qBAAKA,UAAU,SAAf,SACE,yBAAQJ,SAVM,SAACC,GACrBH,EAAUG,EAAEC,OAAOH,QASoBa,KAAK,QAAQR,UAAU,cAAxD,UACE,wBAAQL,MAAM,MAAd,iBACA,wBAAQA,MAAM,YAAd,uBACA,wBAAQA,MAAM,cAAd,kC,OCDGc,EAzBF,SAAC,GAAmC,IAAlCN,EAAiC,EAAjCA,KAAMO,EAA2B,EAA3BA,KAAMnB,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,SAgB9B,OACI,sBAAKQ,UAAU,OAAf,UACI,oBAAIA,UAAS,oBAAeU,EAAKN,UAAY,YAAc,IAA3D,SAAkED,IAClE,wBAAQF,QAfQ,WACpBT,EAASD,EAAMoB,KAAI,SAAAC,GACjB,OAAGA,EAAKP,KAAOK,EAAKL,GACT,2BACAO,GADP,IAEIR,WAAYQ,EAAKR,YAGlBQ,OAO6BZ,UAAU,eAA5C,SAA2D,mBAAGA,UAAU,mBACxE,wBAAQC,QAnBM,WACpBT,EAASD,EAAMsB,QAAO,SAACC,GAAD,OAAQA,EAAGT,KAAOK,EAAKL,QAkBPL,UAAU,YAA1C,SAAsD,mBAAGA,UAAU,uBCAhEe,EAlBE,SAAC,GAAwC,IAAtCxB,EAAqC,EAArCA,MAAOC,EAA8B,EAA9BA,SAAUwB,EAAoB,EAApBA,cACnC,OACE,qBAAKhB,UAAU,iBAAf,SACE,oBAAIA,UAAU,YAAd,SACGgB,EAAcL,KAAI,SAAAD,GAAI,OACrB,cAAC,EAAD,CACElB,SAAUA,EACVD,MAAOA,EAEPmB,KAAMA,EACNP,KAAMO,EAAKP,MAFNO,EAAKL,YCsDPY,MA5Df,WACE,MAAkCC,mBAAS,IAA3C,mBAAOzB,EAAP,KAAkBH,EAAlB,KACA,EAA0B4B,mBAAS,IAAnC,mBAAO3B,EAAP,KAAcC,EAAd,KACA,EAA4B0B,mBAAS,CAAC,QAAtC,mBAAOC,EAAP,KAAezB,EAAf,KACA,EAA0CwB,mBAAS,IAAnD,mBAAOF,EAAP,KAAsBI,EAAtB,KAEFC,qBAAU,WACRC,MACA,IAEFD,qBAAU,YACc,WACpB,OAAOF,GACL,IAAK,YACHC,EAAiB7B,EAAMsB,QAAO,SAAAH,GAAI,OAAuB,IAAnBA,EAAKN,cAC3C,MACF,IAAK,cACHgB,EAAiB7B,EAAMsB,QAAO,SAAAH,GAAI,OAAuB,IAAnBA,EAAKN,cAC3C,MACF,QACEgB,EAAiB7B,IAIvBgC,GACAC,MACC,CAACjC,EAAO4B,IAEX,IAAMK,EAAiB,WACrBC,aAAaC,QAAQ,QAASC,KAAKC,UAAUrC,KAGzC+B,EAAgB,WACpB,GAAsC,OAAlCG,aAAaI,QAAQ,SACvBJ,aAAaC,QAAQ,QAASC,KAAKC,UAAU,SACzC,CACJ,IAAIE,EAAYH,KAAKI,MAAMN,aAAaI,QAAQ,UAChDrC,EAASsC,KAIb,OACE,sBAAK9B,UAAU,MAAf,UACE,iCACE,iDAEF,cAAC,EAAD,CACET,MAAOA,EACPC,SAAUA,EACVC,UAAWA,EACXH,aAAcA,EACdI,UAAWA,IAEb,cAAC,EAAD,CACEsB,cAAeA,EAAexB,SAAUA,EAAUD,MAAOA,QC/ChDyC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.6310ae24.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Form = ({ setInputText, todos, setTodos, inputText, setStatus }) => {\r\n  const inputTextHandler = (e) => {\r\n    setInputText(e.target.value);\r\n  };\r\n  const submitTodoHandler = (e) => {\r\n    e.preventDefault();\r\n    setTodos([\r\n      ...todos,\r\n      {text:inputText , completed: false , id: Math.random()*1000 }\r\n    ]);\r\n    setInputText(\"\"); \r\n  }\r\n  const statusHandler = (e) => {\r\n    setStatus(e.target.value);\r\n  }\r\n  return(\r\n      <form>\r\n        <input value={inputText} onChange={inputTextHandler} type=\"text\" className=\"todo-input\" />\r\n        <button onClick={submitTodoHandler} className=\"todo-button\" type=\"submit\">\r\n          <i className=\"fas fa-plus-square\"></i>\r\n        </button>\r\n        <div className=\"select\">\r\n          <select onChange={statusHandler} name=\"todos\" className=\"filter-todo\">\r\n            <option value=\"all\">All</option>\r\n            <option value=\"completed\">Completed</option>\r\n            <option value=\"uncompleted\">Uncompleted</option>\r\n          </select>\r\n        </div>\r\n      </form>\r\n  )\r\n}\r\n\r\nexport default Form;","import React from 'react';\r\nconst Todo = ({text, todo, todos, setTodos}) => {\r\n    const deleteHandler = () => {\r\n      setTodos(todos.filter((el) => el.id !== todo.id ))\r\n    }\r\n    const completeHandler = () => {\r\n        setTodos(todos.map(item => {\r\n          if(item.id === todo.id){\r\n              return {\r\n                  ...item,  \r\n                  completed: !item.completed,\r\n              }\r\n          } \r\n          return item;\r\n        })\r\n      );\r\n    }\r\n    return (\r\n        <div className=\"todo\">\r\n            <li className={`todo-item ${todo.completed ? \"completed\" : ''}`}>{text}</li>\r\n            <button onClick={completeHandler} className=\"complete-btn\"><i className=\"fas fa-check\"></i></button>\r\n            <button onClick={deleteHandler} className=\"trash-btn\"><i className=\"fas fa-trash\"></i></button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Todo;","import React from 'react';\r\nimport Todo from './Todo';\r\n\r\nconst TodoList = ({ todos, setTodos, filteredTodos }) => {\r\n  return (\r\n    <div className=\"todo-container\">\r\n      <ul className=\"todo-list\">\r\n        {filteredTodos.map(todo => ( \r\n          <Todo \r\n            setTodos={setTodos}\r\n            todos={todos} \r\n            key={todo.id} \r\n            todo={todo}\r\n            text={todo.text}\r\n          />\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TodoList;","import React , { useState, useEffect } from \"react\";\nimport './App.css';\nimport Form from \"./components/Form\";\nimport TodoList from \"./components/TodoList\";\n\nfunction App() {\n  const [inputText, setInputText] = useState(\"\");\n  const [todos, setTodos] = useState([]);\n  const [status, setStatus] = useState([\"all\"]);\n  const [filteredTodos, setFilteredTodos] = useState([]);\n\nuseEffect(() => {\n  getLocalTodos();\n},[]);\n\nuseEffect(() => {\n  const filterHandler = () => {\n    switch(status){\n      case \"completed\":\n        setFilteredTodos(todos.filter(todo => todo.completed === true))\n        break;\n      case \"uncompleted\":\n        setFilteredTodos(todos.filter(todo => todo.completed === false))\n        break;\n      default:\n        setFilteredTodos(todos)\n        break;\n    }\n  };\n  filterHandler();\n  saveLocalTodos(); \n}, [todos, status]);\n\nconst saveLocalTodos = () => {\n  localStorage.setItem(\"todos\", JSON.stringify(todos));\n};\n\nconst getLocalTodos = () => {\n  if (localStorage.getItem(\"todos\") === null){\n    localStorage.setItem(\"todos\", JSON.stringify([]));\n  }else {\n    let todoLocal = JSON.parse(localStorage.getItem(\"todos\"));\n    setTodos(todoLocal);\n  }\n};\n\nreturn (\n  <div className=\"App\">\n    <header>\n      <h1>My To Do List</h1>\n    </header>  \n    <Form \n      todos={todos} \n      setTodos={setTodos} \n      inputText={inputText}\n      setInputText={setInputText}\n      setStatus={setStatus}\n    />\n    <TodoList \n      filteredTodos={filteredTodos} setTodos={setTodos} todos={todos}\n    />\n  </div>\n);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}